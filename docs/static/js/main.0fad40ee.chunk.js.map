{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","elSetCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BY,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAgB,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,0FAE8EC,UAAWH,GAFzF,sBAICI,MAAOF,GAJR,cAIZG,EAJY,gBAMGA,EAAKC,OANR,uBAMXC,EANW,EAMXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbxB,kBAkBXM,GAlBW,4CAAH,sDCCNO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC4BDO,EA5BQ,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDjB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCAEI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,aAEIA,IAAQA,GACHA,GAFGA,EAAIC,aEQrBgB,EAxBM,WAEjB,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAO0C,EAAP,KAAmBC,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAa5C,gBAAoB4C,IAEjC,6BAEID,EAAWnB,KAAK,SAAAT,GAAS,OACrB,cAAC,EAAD,CAEIA,UAAcA,GADNA,Y,MCdhC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0fad40ee.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({elSetCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            elSetCategorias(cats => [ inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue} \r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n    elSetCategorias: PropTypes.func.isRequired\r\n}","\r\nexport const getGif = async( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=3GIkxkX9gKCGAPpcdEsfP2T9zT7RcMC2&q=${ encodeURI( categoria ) }&limit=10`;\r\n\r\n    const resp = await fetch( url );\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return(gifs);\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGif } from './helpers/getGifs';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( categoria);\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h3 className=\"animate__animated animate__fadeIn\">{ categoria }</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\"> \r\n            {\r\n                \r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key = { img.id }\r\n                        img = { img }\r\n                        { ...img }\r\n                    />\r\n                )) \r\n             }\r\n             </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGif } from '../components/helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGif( categoria )\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            \r\n            });\r\n\r\n    }, [categoria]);\r\n\r\n    return state;\r\n    \r\n}\r\n\r\n","\r\nimport React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['one punch man']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>            \r\n            <AddCategory elSetCategorias = { setCategorias } />\r\n\r\n            <ol>\r\n            {\r\n                categorias.map( categoria => \r\n                    <GifGrid \r\n                        key = { categoria }\r\n                        categoria = { categoria } \r\n                    /> ) \r\n            }\r\n            </ol>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}